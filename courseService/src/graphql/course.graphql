# ./schema/schema.graphql
extend schema
  @link(url: "http://specs.apollo.dev/federation/v2.0", import: ["@key"])
directive @include(if: Boolean!) on FIELD
#--------------------
type Course {
  courseID: ID!
  instructorID: ID!
  courseTitle: String
  description: String
  paragraphs: [Paragraph]
  category: String
  createdAt: String
  updatedAt: String
}

type Paragraph {
  paragID: ID!
  title: String
  content: String
  "as a link"
  image: String
}

type Enrollment {
  enrollmentID: ID!
  course: Course!
  enrolledAt: String!
}
extend type User @key(fields: userID) {
  userID: ID! @external
  enrollments: [Enrollment]
  coursesCreatedBy: [Course]
}

# --------------------------------------
input CourseInput {
  courseID: ID!
  instructorID: ID!
  courseTitle: String
  description: String
  category: String
}
input ParagraphInput {
  paragID: ID
  title: String
  content: String
  "as a link"
  image: String
}

# --------------------------------------
type Query {
  courses: [Course]

  coursesByCategory: [Course]
  coursesByInstructor: [Course]
  courseById(id: ID!): Course

  enrollmentsByCourse: [Enrollment]
  enrollmentsByUser: [Enrollment]
}

type Mutation {
  enrollCourse(courseId: ID!): Enrollment!

  createCourse(courseDetails: CourseInput, paragraphs: [ParagraphInput]): Course
  updateCourseDetailes(courseDetails: CourseInput): Course!
  updateParagraph(paragraph: ParagraphInput): Paragraph!
  deleteCourse(courseID: ID!): String!
}
