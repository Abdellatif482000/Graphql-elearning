extend schema
  @link(
    url: "http://specs.apollo.dev/federation/v2.0"
    import: ["@key", "@authenticated", "@requiresScopes"]
  )
directive @include(if: Boolean!) on FIELD
directive @authenticated on OBJECT | FIELD_DEFINITION | INTERFACE | SCALAR | ENUM

scalar federation__Scope
directive @requiresScopes(
  scopes: [[federation__Scope!]!]!
) on OBJECT | FIELD_DEFINITION | INTERFACE | SCALAR | ENUM

scalar DateTime

# ---------- Types -----------------
type User @key(fields: userID) {
  userID: ID!
  username: String
  email: String
  role: Role
  createdAt: DateTime!
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}

type Signin {
  token: String
  userData: User
}
# _____________________________________

# ----------- inputs ----------------
input UserInput {
  userID: ID!
  username: String!
  email: String!
  password: String!
}

input SigninInput {
  email: String
  password: String
}
# ____________________________________

type Query {
  usersListForAdmin: [User]
  userByIDForAdmin(id: ID): User

  signin(role: Role, singinData: SigninInput): Signin
}

type Mutation {
  registerUser(role: Role, userData: UserInput): User
  deleteUser(id: ID!): Boolean!
}
